"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import paypalrestsdk

STRIPE_SECRET_KEY = 'sk_test_51PhYXEJbxEUnBpWupOiQ4ilbOaMYSivGkKay0gDLS4UP1IkR8pQp8vChrwiVlaQw7nKuLve5IbwaG0o9cy6YYruV00aledmbu9'
STRIPE_PUBLISHABLE_KEY = 'pk_test_51PhYXEJbxEUnBpWutyj1yqlQH9ZDbSoI8TNudDbuCHLqtMlIr7aCd6eOcHnBJBBEmPlIT3BAw1Mveg5fpEL08fQr00vrXKjfa2'



PAYPAL_MODE = 'sandbox'  # change 'sandbox' to 'live' for production
PAYPAL_CLIENT_ID = 'AXO9mTnD7cWJx0rrQkMUrWFq62yoLd4uFZJST1746Gi-jb_DuwAHCqmBcmaj6lZtoj1KC9D9bVAtZDjI'
PAYPAL_CLIENT_SECRET = 'ELJWHoWjSPKfAqlbNN1Rmx9N-GH_MP3_Q2cm8IGZCjzjmsDuhytoGGCf-XWdVft7-_qAWNZGpTOca4WR'

paypalrestsdk.configure({
  "mode": PAYPAL_MODE,  # sandbox or live
  "client_id": PAYPAL_CLIENT_ID,
  "client_secret": PAYPAL_CLIENT_SECRET
})

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f)av6l(9a@$&ea7)-jcexpd4m$%!4uw0!d2w*=x7+wo3rmsntm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Certifications',
    'Contact',
    'Formations',
    'Home',
    'Inscription',
    'Panier',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'src.urls'

import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Formations.context_processors.formations_avenir',
                'Formations.context_processors.liste_event',

                'Certifications.context_processors.best_certifications',

            ],


        },

    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS=[os.path.join(BASE_DIR, 'static')]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Répertoire où les fichiers uploadés seront stockés
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

